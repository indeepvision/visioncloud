"use strict";(self.webpackChunk_indeepvision_visioncloud_docs=self.webpackChunk_indeepvision_visioncloud_docs||[]).push([[702],{1822:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>g});var l=t(9575),o=(t(4041),t(2247));const i={sidebar_position:0},a="Choosing a Model Type",r={unversionedId:"user-guide/available-models/choosing-model-type",id:"user-guide/available-models/choosing-model-type",title:"Choosing a Model Type",description:"Selecting the right model type is crucial for your computer vision task. Each type is designed for specific use cases and provides different types of information.",source:"@site/docs/user-guide/available-models/choosing-model-type.md",sourceDirName:"user-guide/available-models",slug:"/user-guide/available-models/choosing-model-type",permalink:"/visioncloud/docs/user-guide/available-models/choosing-model-type",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"userGuide",previous:{title:"Troubleshooting Guide",permalink:"/visioncloud/docs/user-guide/models/troubleshooting"},next:{title:"Classification",permalink:"/visioncloud/docs/user-guide/available-models/classification"}},s={},g=[{value:"Quick Decision Guide",id:"quick-decision-guide",level:2},{value:"Comparison Table",id:"comparison-table",level:2},{value:"Real-World Examples",id:"real-world-examples",level:2}],u={toc:g},y="wrapper";function p(e){let{components:n,...t}=e;return(0,o.yg)(y,(0,l.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"choosing-a-model-type"},"Choosing a Model Type"),(0,o.yg)("p",null,"Selecting the right model type is crucial for your computer vision task. Each type is designed for specific use cases and provides different types of information."),(0,o.yg)("h2",{id:"quick-decision-guide"},"Quick Decision Guide"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"Need to classify entire images? \u2192 Classification\nNeed object contours? \u2192 Segmentation or Instance Segmentation\nNeed to count separate objects? \u2192 Instance Segmentation\nNeed precise boundaries? \u2192 Segmentation / Instance Segmentation\n")),(0,o.yg)("div",{style:{display:"flex",justifyContent:"center"}},(0,o.yg)("table",null,(0,o.yg)("thead",null,(0,o.yg)("tr",null,(0,o.yg)("th",null,"Task Type"),(0,o.yg)("th",null,"When to Use"),(0,o.yg)("th",null,"Key Benefits"))),(0,o.yg)("tbody",null,(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)("strong",null,"Instance Segmentation"),(0,o.yg)("br",null),"(Default Recommendation)"),(0,o.yg)("td",null,"Start with this for most industrial applications"),(0,o.yg)("td",null,"Most versatile and informative",(0,o.yg)("br",null),"Can always simplify analysis if needed",(0,o.yg)("br",null),"Provides geometric and spatial information",(0,o.yg)("br",null),"More robust than classification")),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)("strong",null,"Segmentation")),(0,o.yg)("td",null,"Single object or non-overlapping regions",(0,o.yg)("br",null),"Don't need to count instances",(0,o.yg)("br",null),"Need faster inference"),(0,o.yg)("td",null,"Faster processing",(0,o.yg)("br",null),"Simpler than instance segmentation",(0,o.yg)("br",null),"Good for region identification")),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)("strong",null,"Classification")),(0,o.yg)("td",null,"Truly just need image-level decision",(0,o.yg)("br",null),"No localization needed whatsoever",(0,o.yg)("br",null),"Very simple pass/fail scenario",(0,o.yg)("br",null),(0,o.yg)("strong",null,"AND")," segmentation would be overkill"),(0,o.yg)("td",null,"Fastest inference",(0,o.yg)("br",null),"Simplest approach",(0,o.yg)("br",null),"Minimal computational requirements"))))),(0,o.yg)("admonition",{title:"Pro Tip",type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"When in doubt between Segmentation and Instance Segmentation, choose ",(0,o.yg)("strong",{parentName:"p"},"Instance Segmentation"),". It's more capable and the performance difference is usually negligible on modern hardware.")),(0,o.yg)("h2",{id:"comparison-table"},"Comparison Table"),(0,o.yg)("div",{style:{display:"flex",justifyContent:"center"}},(0,o.yg)("table",null,(0,o.yg)("thead",null,(0,o.yg)("tr",null,(0,o.yg)("th",null,"Feature"),(0,o.yg)("th",null,"Classification"),(0,o.yg)("th",null,"Segmentation"),(0,o.yg)("th",null,"Instance Segmentation"))),(0,o.yg)("tbody",null,(0,o.yg)("tr",null,(0,o.yg)("td",null,"Localization"),(0,o.yg)("td",null,"\u274c"),(0,o.yg)("td",null,"\u2705 (regions)"),(0,o.yg)("td",null,"\u2705 (per object)")),(0,o.yg)("tr",null,(0,o.yg)("td",null,"Object counting"),(0,o.yg)("td",null,"\u274c"),(0,o.yg)("td",null,"\u274c"),(0,o.yg)("td",null,"\u2705")),(0,o.yg)("tr",null,(0,o.yg)("td",null,"Multiple classes"),(0,o.yg)("td",null,"\u274c"),(0,o.yg)("td",null,"\u2705 Multiple regions"),(0,o.yg)("td",null,"\u2705 Multiple objects")),(0,o.yg)("tr",null,(0,o.yg)("td",null,"Precise contours"),(0,o.yg)("td",null,"\u274c"),(0,o.yg)("td",null,"\u2705"),(0,o.yg)("td",null,"\u2705")),(0,o.yg)("tr",null,(0,o.yg)("td",null,"Overlapping objects"),(0,o.yg)("td",null,"N/A"),(0,o.yg)("td",null,"\u274c Cannot separate"),(0,o.yg)("td",null,"\u2705 Can separate")),(0,o.yg)("tr",null,(0,o.yg)("td",null,"Size measurement"),(0,o.yg)("td",null,"\u274c"),(0,o.yg)("td",null,"\u26a0\ufe0f Total area only"),(0,o.yg)("td",null,"\u2705 Per object")),(0,o.yg)("tr",null,(0,o.yg)("td",null,"Position data"),(0,o.yg)("td",null,"\u274c"),(0,o.yg)("td",null,"\u26a0\ufe0f Region center"),(0,o.yg)("td",null,"\u2705 Per object")),(0,o.yg)("tr",null,(0,o.yg)("td",null,"Speed"),(0,o.yg)("td",null,"Fastest"),(0,o.yg)("td",null,"Fast"),(0,o.yg)("td",null,"Moderate")),(0,o.yg)("tr",null,(0,o.yg)("td",null,"Complexity"),(0,o.yg)("td",null,"Simple"),(0,o.yg)("td",null,"Moderate"),(0,o.yg)("td",null,"Complex"))))),(0,o.yg)("h2",{id:"real-world-examples"},"Real-World Examples"),(0,o.yg)("admonition",{title:"Example 1: Bottle Inspection Line",type:"info"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Task:")," Inspect bottles for defects"),(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Wrong choice:"),' Classification \u2192 "Defective" / "Good"',(0,o.yg)("br",{parentName:"p"}),"\n",(0,o.yg)("strong",{parentName:"p"},"Problem:")," Cannot tell where the defect is or how many defects exist"),(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Better choice:")," Instance Segmentation \u2192 Detects each scratch, dent, crack separately",(0,o.yg)("br",{parentName:"p"}),"\n",(0,o.yg)("strong",{parentName:"p"},"Benefit:")," Know exactly what defects exist, where they are, and their severity")),(0,o.yg)("admonition",{title:"Example 2: Presence Detection",type:"info"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Task:")," Check if a product is present on the line"),(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Option A:"),' Classification \u2192 "Present" / "Absent"',(0,o.yg)("br",{parentName:"p"}),"\n",(0,o.yg)("strong",{parentName:"p"},"Option B:")," Segmentation \u2192 Segment the product region  "),(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Recommendation:")," Use ",(0,o.yg)("strong",{parentName:"p"},"Segmentation")),(0,o.yg)("ul",{parentName:"admonition"},(0,o.yg)("li",{parentName:"ul"},"More robust (uses shape and position)"),(0,o.yg)("li",{parentName:"ul"},"Can also tell you if product is correctly positioned"),(0,o.yg)("li",{parentName:"ul"},"Provides size information"),(0,o.yg)("li",{parentName:"ul"},"Can be converted to simple presence/absence"))),(0,o.yg)("admonition",{title:"Example 3: Counting Pills",type:"info"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Task:")," Count pills in a tray"),(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Wrong choice:")," Classification \u2192 Cannot count",(0,o.yg)("br",{parentName:"p"}),"\n",(0,o.yg)("strong",{parentName:"p"},"Wrong choice:")," Segmentation \u2192 Blends touching pills together"),(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Correct choice:")," Instance Segmentation",(0,o.yg)("br",{parentName:"p"}),"\n",(0,o.yg)("strong",{parentName:"p"},"Why:")," Separates each pill individually, enabling accurate counting even when pills touch")))}p.isMDXComponent=!0},2247:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>d});var l=t(4041);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,l,o=function(e,n){if(null==e)return{};var t,l,o={},i=Object.keys(e);for(l=0;l<i.length;l++)t=i[l],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)t=i[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=l.createContext({}),g=function(e){var n=l.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=g(e.components);return l.createElement(s.Provider,{value:n},e.children)},y="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},c=l.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),y=g(t),c=o,d=y["".concat(s,".").concat(c)]||y[c]||p[c]||i;return t?l.createElement(d,a(a({ref:n},u),{},{components:t})):l.createElement(d,a({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=c;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[y]="string"==typeof e?e:o,a[1]=r;for(var g=2;g<i;g++)a[g]=t[g];return l.createElement.apply(null,a)}return l.createElement.apply(null,t)}c.displayName="MDXCreateElement"}}]);